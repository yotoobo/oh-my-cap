#!/usr/local/bin/ruby
# name: Capfile
# ver: 0.1
# date: 2015/05/21

# USER / SHELL
set :user, "root" # the user to run remote commands as
set(:password) { Capistrano::CLI.password_prompt( "Give me ssh password: ") }

# which host will install
role :web, '10.49.1.172'

# variables
set :sshroot, "/root/.ssh"
set :php_home, "/usr/local/php"


namespace :user do

  desc "get user root ssh_pub_key"
  task :sshpubkey_root do
    upload("#{sshroot}/id_rsa.pub","/tmp/root.pub")
    run <<-CMD
      [ -d $HOME/.ssh ] || mkdir -p $HOME/.ssh ;
      [ -O $HOME/.ssh ] || chown $USER $HOME/.ssh ;
      [ -G $HOME/.ssh ] || chgrp $USER $HOME/.ssh ;
      [ -s $HOME/.ssh/authorized_keys ] && ( cat $HOME/.ssh/authorized_keys >> /tmp/root.pub ) ;
      sort /tmp/root.pub | uniq > $HOME/.ssh/authorized_keys ;
      chmod 700 $HOME/.ssh ;
      chmod 644 $HOME/.ssh/authorized_keys ;
      rm -f /tmp/root.pub;
    CMD
  end
  
#  desc "adduser"
#  set (:addusername) { Capistrano::CLI.ui.ask( "Add username(新加账号用户名): ") }
#  task :adduser do
#    run "adduser #{addusername}"
#  end

#  desc "deluser"
#  set (:delusername) { Capistrano::CLI.ui.ask( "Delete username(删除账号用户名): ") }
#  task :deluser do
#    run <<-CMD
#      userdel #{delusername};
#      /bin/sed -i -e \'/#{delusername}/d\' /etc/sudoers;
#    CMD
#  end

#  desc "change user password"
#  set (:chgusername) { Capistrano::CLI.ui.ask( "请输入被更改密码的用户名: ") }
#  set (:userpasswd) { Capistrano::CLI.password_prompt( "用户#{chgusername}的新密码: ") }
#  set (:reuserpasswd) { Capistrano::CLI.password_prompt( "再次输入#{chgusername}的新密码: ") }
#  task :passwd do
#    run "passwd #{chgusername}" do |ch, stream, data|
#      if data =~ /^New UNIX password:|^New password:/
#        ch.send_data(userpasswd + "\n")
#      elsif data =~ /^Retype new UNIX password:|^Retype new password:/
#        ch.send_data(reuserpasswd + "\n")
#      else
#        Capistrano::Configuration.default_io_proc.call(ch, stream, data)
#      end
#    end
#  end

  desc "add std user"
  task :stduser do
    run <<-CMD
    if [ `grep -c ^work /etc/group` -eq 0 ];then { echo "add user(work)"; useradd -s /bin/lksh work; }; else { echo "user(work) added"; }; fi;
    if [ `grep -c ^rd /etc/group` -eq 0 ];then { echo "add user(rd)"; useradd -s /bin/lksh rd; }; else { echo "user(rd) added"; }; fi;
    CMD
  end
end


namespace :lnmp do

    desc "lnmp init"
    task :default do
        run <<-CMD
            if [ -d #{php_home} ];
            then {
                echo "php is exists" ;
            };
            else {
                cd /tmp && wget -q -c -t 3 -T 10 http://mirrors.sohu.com/php/php-5.4.41.tar.gz ;
                tar zxf php-5.4.41.tar.gz && cd php-5.4.41 ;
                #yum -y -q install gcc gcc-c++ zlib-devel ncurses-devel xz cmake curl-devel bison lsof openssl-devel libxml2-devel libjpeg-devel libpng-devel freetype-devel autoconf libtool libtool-ltdl-devel bzip2-devel gmp-devel openldap-devel mysql-devel readline-devel libxslt-devel.x86_64 1>/dev/null;
        	./configure --prefix=#{php_home} --enable-fpm 1>/dev/null;
		make 1>/dev/null && make install 1>/dev/null;
	   };
           fi;
        [ ! -f /etc/ld.so.conf.d/php.conf ] && echo "/usr/local/php/lib" > /etc/ld.so.conf.d/php.conf && echo "/usr/local/lib" >> /etc/ld.so.conf.d/php.conf && ldconfig ;
        #[ ! -f /etc/init.d/php-fpm ] && mv /usr/local/php/php-fpm.service /etc/init.d/php-fpm ;
        chmod a+x /etc/init.d/php-fpm && chkconfig php-fpm on ;
        #rm -rf /tmp/{*.rpm,php_*,libiconv-1.14*} ;
        CMD
    end
end
