#!/usr/local/bin/ruby
# name: Capfile
# ver: 0.1
# date: 2015/05/21

# USER / SHELL
set :user, "root" # the user to run remote commands as
set(:password) { Capistrano::CLI.password_prompt( "Give me ssh password: ") }

# which host will install
role :web, '192.168.1.1','192.168.1.2','192.168.1.3'

# variables
set :sshroot, "/root/.ssh"
set :php_home, "/usr/local/php"
set :nginx_home, "/usr/local/nginx"

namespace :ssh do

  desc "get user root ssh_pub_key"
  task :default do
    upload("#{sshroot}/id_rsa.pub","/tmp/root.pub")
    run <<-CMD
      [ -d $HOME/.ssh ] || mkdir -p $HOME/.ssh ;
      [ -O $HOME/.ssh ] || chown $USER $HOME/.ssh ;
      [ -G $HOME/.ssh ] || chgrp $USER $HOME/.ssh ;
      [ -s $HOME/.ssh/authorized_keys ] && ( cat $HOME/.ssh/authorized_keys >> /tmp/root.pub ) ;
      sort /tmp/root.pub | uniq > $HOME/.ssh/authorized_keys ;
      chmod 700 $HOME/.ssh ;
      chmod 644 $HOME/.ssh/authorized_keys ;
      rm -f /tmp/root.pub;
    CMD
  end
  
#  desc "adduser"
#  set (:addusername) { Capistrano::CLI.ui.ask( "Add username(新加账号用户名): ") }
#  task :adduser do
#    run "adduser #{addusername}"
#  end

#  desc "deluser"
#  set (:delusername) { Capistrano::CLI.ui.ask( "Delete username(删除账号用户名): ") }
#  task :deluser do
#    run <<-CMD
#      userdel #{delusername};
#      /bin/sed -i -e \'/#{delusername}/d\' /etc/sudoers;
#    CMD
#  end

#  desc "change user password"
#  set (:chgusername) { Capistrano::CLI.ui.ask( "请输入被更改密码的用户名: ") }
#  set (:userpasswd) { Capistrano::CLI.password_prompt( "用户#{chgusername}的新密码: ") }
#  set (:reuserpasswd) { Capistrano::CLI.password_prompt( "再次输入#{chgusername}的新密码: ") }
#  task :passwd do
#    run "passwd #{chgusername}" do |ch, stream, data|
#      if data =~ /^New UNIX password:|^New password:/
#        ch.send_data(userpasswd + "\n")
#      elsif data =~ /^Retype new UNIX password:|^Retype new password:/
#        ch.send_data(reuserpasswd + "\n")
#      else
#        Capistrano::Configuration.default_io_proc.call(ch, stream, data)
#      end
#    end
#  end

#  desc "add std user"
#  task :stduser do
#    run <<-CMD
#    if [ `grep -c ^work /etc/group` -eq 0 ];then { echo "add user(work)"; useradd -s /bin/lksh work; }; else { echo "user(work) added"; }; fi;
#    if [ `grep -c ^rd /etc/group` -eq 0 ];then { echo "add user(rd)"; useradd -s /bin/lksh rd; }; else { echo "user(rd) added"; }; fi;
#    CMD
#  end
end


namespace :lnmp do

    desc "lnmp init"
    task :default do
        run <<-CMD
            if [ -d #{php_home} ];
            then {
                echo "php is exists" ;
            };
            else {
            	rpm -ivh http://mirrors.yun-idc.com/epel/6/x86_64/epel-release-6-8.noarch.rpm 1>/dev/null;
                yum -y -q install gcc gcc-c++ zlib-devel ncurses-devel re2c xz curl-devel bison bison-devel lsof openssl-devel libxml2-devel libjpeg-devel libpng-devel freetype-devel autoconf bzip2-devel mysql-devel readline-devel unixODBC-devel t1lib-devel libmcrypt-devel >/dev/null 2>&1;
                [ ! -f /usr/local/include/sqlext.h ] && ln -s /usr/include/sqlext.h /usr/local/include/;
                cd /tmp && wget -q -c -t 3 -T 10 http://mirrors.sohu.com/php/php-5.4.41.tar.gz && wget -q -c -t 3 -T 10 http://xcache.lighttpd.net/pub/Releases/3.2.0/xcache-3.2.0.tar.gz;
                tar zxf php-5.4.41.tar.gz && cd php-5.4.41;
        	./configure --prefix=#{php_home} --with-config-file-path=#{php_home}/etc --enable-fpm --enable-bcmath --enable-shmop --enable-zip --with-gd --with-jpeg-dir --with-png-dir --with-freetype-dir --with-bz2 --with-zlib --with-mhash --with-mcrypt --with-mysql --with-mysqli --with-curl --with-t1lib --with-gettext --with-unixODBC  >/dev/null 2>&1;
		make >/dev/null 2>&1 && make install >/dev/null 2>&1;
		[ ! -f #{php_home}/etc/php.ini ] && cp php.ini-production #{php_home}/etc/php.ini;
        	[ ! -f #{php_home}/etc/php-fpm.conf ] && cp #{php_home}/etc/php-fpm.conf.default #{php_home}/etc/php-fpm.conf; 
        	[ ! -f /etc/ld.so.conf.d/lnmp.conf ] && echo "/usr/local/php/lib" > /etc/ld.so.conf.d/lnmp.conf && echo "/usr/local/lib" >> /etc/ld.so.conf.d/lnmp.conf && ldconfig ;
        	[ ! -f /etc/init.d/php-fpm ] && cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm ;
        	chmod a+x /etc/init.d/php-fpm && chkconfig php-fpm on ;
        	#{php_home}/bin/pecl install memcache >/dev/null 2>&1;
        	#{php_home}/bin/pecl install redis >/dev/null 2>&1;
        	echo "extension=memcache.so" >> #{php_home}/etc/php.ini;
        	echo "extension=redis.so" >> #{php_home}/etc/php.ini;
        	cd /tmp && tar zxf xcache-3.2.0.tgz;
		cd xcache-3.2.0 && #{php_home}/bin/phpize >/dev/null;
		./configure --enable-xcache --with-php-config=#{php_home}/bin/php-config >/dev/null && make >/dev/null 2>&1 && make install >/dev/null 2>&1;
		cat xcache.ini >> #{php_home}/etc/php.ini ;
        	echo "PHP install ok";
        	
	   };
           fi;
	   if [ -d #{nginx_home} ];
	   then {
	   	echo "nginx is exists" ;
	   };
	   else {
	   	yum -y -q install pcre-devel 1>/dev/null;
	   	cd /tmp ;
	   	wget -q -c -t 3 -T 10 http://mirrors.sohu.com/nginx/nginx-1.8.0.tar.gz ;
	   	wget -q -c -t 3 -T 10 http://www.canonware.com/download/jemalloc/jemalloc-3.6.0.tar.bz2 ;
	   	tar jxf jemalloc-3.6.0.tar.bz2 && cd jemalloc-3.6.0;
	   	./configure && make >/dev/null 2>&1 && make install >/dev/null;
	   	ldconfig;
	   	cd /tmp;
	   	rm -fr jemalloc-3.6.0;
	   	tar zxf nginx-1.8.0.tar.gz && cd nginx-1.8.0;
	   	./configure --prefix=#{nginx_home} --without-mail_pop3_module --without-mail_imap_module --without-mail_smtp_module >/dev/null;
	   	make >/dev/null && make install >/dev/null;
	   	echo "Nginx install ok";
	   };
	   fi;
        CMD
    end
end
